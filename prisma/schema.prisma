datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  shadowDatabaseUrl    = env("SHADOW_DATABASE_URL")
  referentialIntegrity = "prisma"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

model guestbookEntry {
  id        BigInt   @id @default(autoincrement())
  createdBy user     @relation(fields: [authorId], references: [id])
  authorId  BigInt   @db.BigInt
  createdAt DateTime @default(now()) @db.DateTime(6)
  body      String   @db.LongText
}

model view {
  slug  String @id @db.VarChar(128)
  count BigInt @default(1)
}

enum ReadStatus {
  HAS_READ
  HAS_NOT_READ
  READING
}

model book {
  id          BigInt     @id @default(autoincrement())
  title       String     @db.VarChar(256)
  subtitle    String?    @db.VarChar(256)
  author      String     @db.VarChar(256)
  description String?    @db.Text
  publishDate String?    @db.VarChar(128)
  numPages    Int?       @db.Int
  cover       String?    @db.VarChar(256)
  subjects    String?    @db.Text
  key         String?    @db.VarChar(256)
  comment     String?    @db.Text
  rating      Float?     @db.Float
  createdAt   DateTime   @default(now()) @db.DateTime(6)
  updatedAt   DateTime   @default(now()) @db.DateTime(6)
  createdBy   user       @relation(fields: [authorId], references: [id])
  authorId    BigInt     @db.BigInt
  readStatus  ReadStatus @default(HAS_NOT_READ)
}

model comment {
  id        BigInt   @id @default(autoincrement())
  createdAt DateTime @default(now()) @db.DateTime(6)
  body      String   @db.Text
  createdBy user     @relation(fields: [authorId], references: [id])
  authorId  BigInt   @db.BigInt
}

model user {
  id        BigInt           @id @default(autoincrement())
  name      String           @db.VarChar(128) @default("")
  email     String           @unique @db.VarChar(256)
  avatar    String           @db.VarChar(256)
  createdAt DateTime         @default(now()) @db.DateTime(6)
  books     book[]
  guestbook guestbookEntry[]
  comments  comment[]
}
